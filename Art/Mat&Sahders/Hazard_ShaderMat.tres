[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

varying vec2 v_uv; 
varying vec2 v_position;

const float PI2 = 6.28318530718;

float polygon(vec2 pt,vec2 center, float radius, int sides, float rotate, float edge_thikness){
	
	pt -= center;
	float theta = atan(pt.y, pt.x) + rotate;
	float rad = PI2/float(sides);
	
	float d = cos(floor(theta/rad + 0.5)* rad-theta) * length(pt); 
	
	return 1.0 - smoothstep(radius,radius + edge_thikness,d);
}

void fragment(){
	
	vec2 pt = v_uv;
	vec2 center = vec2(0.0);
	float radius = 3.0;
	vec3 color = polygon(v_position,center,radius,6,0.1*TIME,22.0) * vec3(1.0,0.0,0.0);
	
	COLOR = vec4(color,color.r);
	
}

void vertex(){
	v_uv = UV;
	v_position = VERTEX ;
}"

[resource]
shader = SubResource( 1 )
